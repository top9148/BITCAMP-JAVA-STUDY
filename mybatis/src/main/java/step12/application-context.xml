<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="step12"/>         
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>   
        <property name="mapperLocations" value="classpath*:step12/*Mapper.xml"/>
        <property name="typeAliasesPackage" value="step12"/> 
    </bean>
    
    <bean id="dataSource" 
          class="org.apache.commons.dbcp2.BasicDataSource" 
          destroy-method="close">
	    <property name="driverClassName" value="${jdbc.driverClassName}" />
	    <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
	    <property name="password" value="${jdbc.password}" />
	</bean>
    
    <context:property-placeholder location="step12/jdbc.properties"/>
    
    <!-- DAO 객체를 자동생성해주는 공장 준비 
         => 다음 객체는 지정된 패키지에서 인터페이스를 찾는다.
         => 그리고 그 인터페이스와 대응하는 SQL Mapper를 찾아 
            DAO 객체를 자동으로 생성한다.
            이때 SQL Mapper 파일의 namespace는 
            인터페이스의 이름(패키지명 포함)과 일치해야 한다.
        -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  <property name="basePackage" value="step12" />
	</bean>
</beans>















