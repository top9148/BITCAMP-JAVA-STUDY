package bitcamp.java100.ch07.ex5;

public class A {
    // 모든 클래스는 반드시 생성자를 가져야 한다.
    // 생성자를 정의하지 않으면 다음과 같이 기본 생성자를 자동으로 추가한다.
    /*
    A() {
        // 모든 생성자는 첫 번째 문장으로 수퍼 클래스의 기본 생성자를 호출한다.
        // A 클래스의 수퍼 클래스는 Object이기 때문에 
        // 다음은 Object의 기본 생성자를 호출한다. 
        super(); 
    }
    */
    
    // 만약 다음과 같이 생성자를 정의한다면 컴파일러가 기본 생성자를 추가하지 않는다.
    A() {
        // 수퍼 클래스의 기본 생성자를 호출하는 문장을 생략하게 되면,
        // 컴파일러가 자동으로 첫 번째 문장으로 다음을 추가한다.
        // 따라서 반드시 수퍼 클래스의 생성자가 호출된다.
        //super();
        
        System.out.println("A() 생성자 실행!");
    }
    
    // 때로는 다음과 같이 생성자를 정의할 때 수퍼 생성자 호출을 생략하지 않을 수 있다.
    A(String str) {
        super(); // 이렇게 수퍼 클래스의 생성자를 호출하라고 명시할 수 있다.
        System.out.println("A(String) 생성자 실행!");
    }
    
    // 그런데 수퍼 클래스 생성자를 첫 번째로 호출하지 않는다면, 컴파일 오류이다.
    A(int i) {
        //super(); // 생략하면 자동으로 붙는다.
        System.out.println("A(int) 생성자 실행!");
        //super(); // 첫 번째 문장이 아니면 컴파일 오류이다.
    }
    
}






