<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:c="http://www.springframework.org/schema/c"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 생성자 호출 II - 속성을 이용하여 파라미터 값 전달하기 
         => 생성자의 파라미터 값을 지정할 수 있으려면 
            다음 네임스페이스를 추가해야 한다.
            xmlns:c="http://www.springframework.org/schema/c"
         => 이 네임스페이스도 XML 스키마의 위치를 지정할 필요가 없다.
         => 사용법
            c:파라미터명="값"
    -->
    
    <bean class="bitcamp.java100.ch20.ex2.MyClass" 
          c:p1="홍길동"/>
    
    <!-- 이 방식은 파라미터의 타입을 지정하지 못한다.
         따라서 다음 태그는 MyClass(String) 생성자를 호출한다. 
    -->
    <bean class="bitcamp.java100.ch20.ex2.MyClass" 
          c:p1="100"/>      
    
    <!-- 이 방식으로 사용하려면 타입에 따라 이름을 다르게 선언하라! 
         MyClass2는 값에 따라 파라미터명을 달리한 경우이다.
    -->
    <bean class="bitcamp.java100.ch20.ex2.MyClass2" 
          c:age="100"/>
          
    <bean class="bitcamp.java100.ch20.ex2.MyClass2" 
          c:name="홍길동"/>
    
    <!-- 파라미터의 순서를 지정하지 않으면,
         스프링 내부에서 정한 규칙에 따라 적절한 생성자가 선택된다. 
         주로 문자열 우선으로 찾는다. -->
    <bean class="bitcamp.java100.ch20.ex2.MyClass2" 
          c:name="홍길동" c:age="20"/>
          
    <bean class="bitcamp.java100.ch20.ex2.MyClass2" 
          c:age="20" c:name="홍길동" />  
    
    <!-- 파라미터의 이름을 지정하기 때문에 값을 나열하는 순서는 상관없다. -->
    <bean class="bitcamp.java100.ch20.ex2.MyClass2" 
          c:age="20" c:name="홍길동" c:working="true"/>
    
      
    <!-- 생성자의 파라미터를 지정할 때 이름 대신 순서를 사용할 수 있다. -->
    <bean class="bitcamp.java100.ch20.ex2.MyClass2" 
          c:_1="20" c:_0="홍길동" c:_2="true"/>                   
</beans>








