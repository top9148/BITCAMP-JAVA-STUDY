<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- @Component, @Controller, @Service, @Repository 애노테이션이 붙은 
         클래를 찾아 인스턴스를 생성한다. 
         물론 의존 객체도 주입해줄 것이다. -->
    <context:component-scan base-package="java100.app.web.v02"/>


    <!-- 모든 페이지 컨트롤러에서 사용할 파라미터 변환기를 꼽는다. -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="webBindingInitializer">
            <bean class="java100.app.web.v02.Test12WebBindingInitializer"/>
        </property>
        
        <property name="messageConverters">
	        <list>
	            <!-- 클라이언트가 보낸 데이터의 Content-Type이 "application/json"일 때,  
	                 "자바 객체"로 변환해주는 컨버터  -->
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	            
	            <!-- 클라이언트가 보낸 데이터의 Content-Type이 "text/plain"일 때,
	                 String으로 변환해주는 컨버터 -->
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	        </list>
	    </property>
    </bean>
    
    <!-- 멀티파트 형식으로 전송된 데이터를 처리할 객체를 등록한다. -->
    <!-- 방법1: Apache의 commons-fileupload 라이브러리를 사용할 때 등록할 객체 -->
    <!-- 
    <bean id="multipartResolver" 
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="5000000"/>
    </bean>
     -->
    
    <!-- 방법2: Servlet 3.0부터 제공된 파일 업로드 기능을 이용할 때 등록할 객체 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.support.StandardServletMultipartResolver"></bean>
     
</beans>







