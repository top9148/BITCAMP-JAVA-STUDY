<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- @Component, @Controller, @Service, @Repository 애노테이션이 붙은 
         클래를 찾아 인스턴스를 생성한다. 
         물론 의존 객체도 주입해줄 것이다. -->
    <context:component-scan base-package="java100.app.web.v04"/>


    <!-- 모든 페이지 컨트롤러에서 사용할 파라미터 변환기를 꼽는다. -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="webBindingInitializer">
            <bean class="java100.app.web.v02.Test12WebBindingInitializer"/>
        </property>
        
        <property name="messageConverters">
	        <list>
	            <!-- 클라이언트가 보낸 데이터의 Content-Type이 "application/json"일 때,  
	                 "자바 객체"로 변환해주는 컨버터  
	                 또한 요청 핸들러가 리턴한 자바 객체를 
	                 "application/json" 형식의 문자열로 변환해주는 작업도 
	                 함께 수행한다. -->
	            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	            
	            <!-- 클라이언트가 보낸 데이터의 Content-Type이 "text/plain"일 때,
	                 String으로 변환해주는 컨버터 -->
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter"/>
	        </list>
	    </property>
    </bean>
    
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.support.StandardServletMultipartResolver"></bean>
     
     
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    
    <mvc:interceptors>
        <!-- URL을 지정하지 않으면 모든 /app/* 요청에 대해
             인터셉터를 실행한다. -->
        <bean class="java100.app.web.v04.Interceptor01"/>
        
        <!-- 인터셉터를 꼽을 URL을 지정할 수 있다. -->
        <mvc:interceptor>
            <mvc:mapping path="/v04/controller02/*"/>
            <mvc:exclude-mapping path="/v04/controller02/m1"/>
            <bean class="java100.app.web.v04.Interceptor02"/>
        </mvc:interceptor>
        
    </mvc:interceptors>
</beans>







